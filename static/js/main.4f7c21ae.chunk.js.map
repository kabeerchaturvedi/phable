{"version":3,"sources":["CalculateValues.js","Calories.js","App.js","reportWebVitals.js","index.js"],"names":["CalculateValues","userInfo","JSON","parse","localStorage","getItem","console","log","map","details","BMR","weight","bodyfat","tdee","activityLevels","Calories","useState","userValues","setuserValues","isDisplayResult","setIsDisplayResult","handleInput","event","name","target","value","onSubmit","e","preventDefault","userDetails","push","setItem","stringify","className","type","autoComplete","id","onChange","acitvityLevels","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAgCeA,EA9BS,WACtB,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,gBAEjD,OADAC,QAAQC,IAAIN,GAEV,8BACE,8BACGA,EAASO,KAAI,SAACC,GACb,IAAMC,EACJ,MAAQD,EAAQE,OAASF,EAAQG,QAAUH,EAAQE,QAAU,IACzDE,EAAOJ,EAAQK,eAAiBJ,EACtC,OACE,8BACE,gCACE,iDACA,8BAAMD,EAAQE,SACd,wDACA,8BAAMF,EAAQK,iBACd,mDACA,8BAAML,EAAQG,UACd,yCAAYC,KACZ,yCAAYH,kBC4DbK,EA/EE,WACf,MAAoCC,mBAAS,CAC3CL,OAAQ,GACRC,QAAS,GACTE,eAAgB,KAHlB,mBAAOG,EAAP,KAAmBC,EAAnB,KAMA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAc,SAACC,GACnB,IAAMC,EAAOD,EAAME,OAAOD,KAEpBE,EAAQH,EAAME,OAAOC,MAE3BP,EAAc,2BAAKD,GAAN,kBAAmBM,EAAOE,MAYzC,OAAIN,EACK,cAAC,EAAD,IAGP,8BACE,uBAAMO,SAdW,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAc3B,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAEpEwB,EAAYC,KAAZ,eAAsBb,IACtBb,aAAa2B,QAAQ,cAAe7B,KAAK8B,UAAUH,IACnDT,GAAmB,IAOaa,UAAU,OAAxC,UACE,kCACE,uCACA,uBACEC,KAAK,OACLC,aAAa,MACbC,GAAG,SACHb,KAAK,SACLE,MAAOR,EAAWN,OAClB0B,SAAUhB,OAGd,kCACE,yCACA,uBACEa,KAAK,OACLC,aAAa,MACbC,GAAG,UACHb,KAAK,UACLE,MAAOR,EAAWL,QAClByB,SAAUhB,OAGd,kCACE,gDACA,yBACEI,MAAOR,EAAWqB,eAClBD,SAAUhB,EACVE,KAAK,iBAHP,UAKE,wBAAQE,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,MAAd,uBAIJ,8BACE,wBAAQS,KAAK,SAASD,UAAU,kBAAhC,4BCnEKM,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4f7c21ae.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CalculateValues = () => {\n  const userInfo = JSON.parse(localStorage.getItem(\"userDetails\"));\n  console.log(userInfo);\n  return (\n    <div>\n      <div>\n        {userInfo.map((details) => {\n          const BMR =\n            21.6 * (details.weight - details.bodyfat * details.weight) + 370;\n          const tdee = details.activityLevels * BMR;\n          return (\n            <div>\n              <div>\n                <h3>User's weight: </h3>\n                <div>{details.weight}</div>\n                <h3>User's activityLevel: </h3>\n                <div>{details.activityLevels}</div>\n                <h3>User's Body Fat: </h3>\n                <div>{details.bodyfat}</div>\n                <div>TDEE: {tdee}</div>\n                <div>BMR : {BMR}</div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CalculateValues;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport CalculateValues from \"./CalculateValues\";\nconst Calories = () => {\n  const [userValues, setuserValues] = useState({\n    weight: \"\",\n    bodyfat: \"\",\n    activityLevels: \"\",\n  });\n\n  const [isDisplayResult, setIsDisplayResult] = useState(false);\n\n  const handleInput = (event) => {\n    const name = event.target.name;\n\n    const value = event.target.value;\n\n    setuserValues({ ...userValues, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const userDetails = JSON.parse(localStorage.getItem(\"userInfo\")) || [];\n\n    userDetails.push({ ...userValues });\n    localStorage.setItem(\"userDetails\", JSON.stringify(userDetails));\n    setIsDisplayResult(true);\n  };\n  if (isDisplayResult) {\n    return <CalculateValues />;\n  }\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <label>\n          <p>Weight</p>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"weight\"\n            name=\"weight\"\n            value={userValues.weight}\n            onChange={handleInput}\n          />\n        </label>\n        <label>\n          <p>Body Fat</p>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"bodyfat\"\n            name=\"bodyfat\"\n            value={userValues.bodyfat}\n            onChange={handleInput}\n          />\n        </label>\n        <label>\n          <p>Activity Levels</p>\n          <select\n            value={userValues.acitvityLevels}\n            onChange={handleInput}\n            name=\"activityLevels\"\n          >\n            <option value=\"1.2\">1.2</option>\n            <option value=\"1.375\">1.375</option>\n            <option value=\"1.55\">1.55</option>\n            <option value=\"1.725\">1.725</option>\n            <option value=\"1.9\">1.9</option>\n          </select>\n        </label>\n\n        <div>\n          <button type=\"submit\" className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Calories;\n","import Calories from \"./Calories\";\n\nfunction App() {\n  return <Calories />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}